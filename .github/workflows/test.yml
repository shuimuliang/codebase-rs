name: Rust CI Test

on:
  push:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust-version: [nightly]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Update and reinstall binutils
      run: |
        sudo apt-get update
        sudo apt-get install --reinstall binutils
        sudo apt-get install lld
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
    - name: Source code spell checker
      uses: crate-ci/typos@master
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Check clippy
      run: cargo clippy --workspace --all-targets --tests -- -D warnings
    - name: Build and test
      run: cargo test --all-features
